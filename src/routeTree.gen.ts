/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as ProtectedStoreImport } from './routes/_protected/store'
import { Route as ProtectedHomeImport } from './routes/_protected/home'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedStoreRoute = ProtectedStoreImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedHomeRoute = ProtectedHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => ProtectedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_protected/home': {
      id: '/_protected/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof ProtectedHomeImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/store': {
      id: '/_protected/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof ProtectedStoreImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteChildren {
  ProtectedHomeRoute: typeof ProtectedHomeRoute
  ProtectedStoreRoute: typeof ProtectedStoreRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedHomeRoute: ProtectedHomeRoute,
  ProtectedStoreRoute: ProtectedStoreRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedRouteWithChildren
  '/login': typeof LoginRoute
  '/home': typeof ProtectedHomeRoute
  '/store': typeof ProtectedStoreRoute
}

export interface FileRoutesByTo {
  '': typeof ProtectedRouteWithChildren
  '/login': typeof LoginRoute
  '/home': typeof ProtectedHomeRoute
  '/store': typeof ProtectedStoreRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/login': typeof LoginRoute
  '/_protected/home': typeof ProtectedHomeRoute
  '/_protected/store': typeof ProtectedStoreRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/login' | '/home' | '/store'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/login' | '/home' | '/store'
  id:
    | '__root__'
    | '/_protected'
    | '/login'
    | '/_protected/home'
    | '/_protected/store'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/login"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/home",
        "/_protected/store"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_protected/home": {
      "filePath": "_protected/home.tsx",
      "parent": "/_protected"
    },
    "/_protected/store": {
      "filePath": "_protected/store.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
